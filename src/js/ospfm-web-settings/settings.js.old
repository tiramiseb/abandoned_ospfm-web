        var personal_information_form,
            password_form,
            widgets_move_button,
            widgets_apply_button,
            widgets_screen_buttons,
            widgets_screen,

            redo_wizard_button     = new Button('red', 'cancel',
                                                _('Reinitialize everything'))
                                            .onClick(wizardconfirm),
            emails_form            = new Form(),
            unused_widgets         = new Element('ul', {'id':'unusedwidgets'}),
            currentlocale          = preferences.get('ospfm-web-locale');






        // Widgets
        (function () {
            // Slight delay when displaying unused widgets so the "init" part
            // in widgets.js has enough time to remove used widgets from
            // widgets.unused, when loading this page first
            widgets.unused.forEach(function(widget) {
                unused_widgets.insert(widgets.get(widget));
            });
        }).delay(10);
        widgets_move_button = new Button('blue', 'move', _('Move widgets'))
        .onClick(function() {
            widgets_screen_buttons.update(
                widgets_apply_button
            )
            start_move_widgets()
        });
        widgets_apply_button = new Button('green', 'apply', _('Apply'))
        .onClick(function() {
            widgets_screen_buttons.update(
                widgets_move_button
            )
            end_move_widgets()
        });
        widgets_screen_buttons = new Element('div').insert(
            widgets_move_button
        );
        widgets_screen = new Element('div').insert([
            new Element('p', {'html':
                _('Click on "Move widgets" to configure the widgets you want to be displayed, on the left or on top of the screen.')
            }),
            widgets_screen_buttons,
            unused_widgets
        ]);
        // Personal information subtabs
        this.tabs.addTab(
            _('Personal information'),
            'personal',
            new Element('div').insert(
                new Tabs().addTab(
                    _('General information'),
                    'general',
                    new Element('div').insert([
                        new Element('h2', {'html':_('Preferences')}),
                        personal_information_form,
                        new Element('h2', {'html':_('Password')}),
                        password_form,
                        new Element('h2', {'html':_('Reinitialize')}),
                        new Element('p', {'html':_('You can reinitialize your data and re-run the initial wizard by clicking on this button:')}),
                        redo_wizard_button
                    ]),
                    true
                ).addTab(
                    _('Email addresses'),
                    'email',
                    new Element('div').insert([
                        new Element('p', {
                            'html': _('Email addresses allow your friends and acquaintances to find you in order to create debts between you. They are also used to send notifications.')
                        }),
                        emails_form
                    ])
                ).addTab(
                    _('Contacts'),
                    'contacts',
                    contacts.htmledit(['fullname', 'comment'])
                ).addTab(
                    _('Widgets'),
                    'widgets',
                    widgets_screen
                )
            ),
            true
        )









        return [
                this.title,
                new Element('div', {
                    'class':'onlysmall',
                    'html':_('Please use a wider screen in order to change settings')
                }),
                this.container.addClass('notsmall'),
                this.buttons
        ]
    },
    load:function(url, hash) {
        if (hash) {
            this.tabs.loadfromhash(hash);
        };
        this.resize()
    },

});



// Put this screen in the list
screens.add(
    new SettingsScreen()
);
